{"version":3,"file":"parameters.js","sourceRoot":"","sources":["../../src/parameters.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { RequestParameters } from \"@azure-rest/core-client\";\nimport type {\n  DetectionModel,\n  RecognitionModel,\n  FaceAttributeType,\n  FindSimilarMatchMode,\n  CreateCollectionRequest,\n  UserDefinedFieldsForUpdate,\n  AddFaceFromUrlRequest,\n  FaceUserData,\n  UserDefinedFields,\n  CreateLivenessSessionContent,\n  CreateLivenessWithVerifySessionMultipartContent,\n  CreateLivenessWithVerifySessionJsonContent,\n} from \"./models.js\";\n\nexport type GetOperationResultParameters = RequestParameters;\n\nexport interface DetectFromUrlBodyParam {\n  body: { url: string };\n}\n\nexport interface DetectFromUrlQueryParamProperties {\n  /**\n   * The 'detectionModel' associated with the detected faceIds. Supported 'detectionModel' values include 'detection_01', 'detection_02' and 'detection_03'. The default value is 'detection_01'. 'detection_03' is recommended since its accuracy is improved on smaller faces (64x64 pixels) and rotated face orientations.\n   *\n   * Possible values: \"detection_01\", \"detection_02\", \"detection_03\"\n   */\n  detectionModel?: DetectionModel;\n  /**\n   * The 'recognitionModel' associated with the detected faceIds. Supported 'recognitionModel' values include 'recognition_01', 'recognition_02', 'recognition_03' or 'recognition_04'. The default value is 'recognition_01'. 'recognition_04' is recommended since its accuracy is improved on faces wearing masks compared with 'recognition_03', and its overall accuracy is improved compared with 'recognition_01' and 'recognition_02'.\n   *\n   * Possible values: \"recognition_01\", \"recognition_02\", \"recognition_03\", \"recognition_04\"\n   */\n  recognitionModel?: RecognitionModel;\n  /** Return faceIds of the detected faces or not. The default value is true. */\n  returnFaceId?: boolean;\n  /** Analyze and return the one or more specified face attributes in the comma-separated string like 'returnFaceAttributes=headPose,glasses'. Face attribute analysis has additional computational and time cost. */\n  returnFaceAttributes?: FaceAttributeType[];\n  /** Return face landmarks of the detected faces or not. The default value is false. */\n  returnFaceLandmarks?: boolean;\n  /** Return 'recognitionModel' or not. The default value is false. This is only applicable when returnFaceId = true. */\n  returnRecognitionModel?: boolean;\n  /** The number of seconds for the face ID being cached. Supported range from 60 seconds up to 86400 seconds. The default value is 86400 (24 hours). */\n  faceIdTimeToLive?: number;\n}\n\nexport interface DetectFromUrlQueryParam {\n  queryParameters?: DetectFromUrlQueryParamProperties;\n}\n\nexport interface DetectFromUrlMediaTypesParam {\n  /** The format of the HTTP payload. */\n  contentType: \"application/json\";\n}\n\nexport type DetectFromUrlParameters = DetectFromUrlQueryParam &\n  DetectFromUrlMediaTypesParam &\n  DetectFromUrlBodyParam &\n  RequestParameters;\n\nexport interface DetectBodyParam {\n  /**\n   * The input image binary.\n   *\n   * Value may contain any sequence of octets\n   */\n  body: string | Uint8Array | ReadableStream<Uint8Array> | NodeJS.ReadableStream;\n}\n\nexport interface DetectQueryParamProperties {\n  /**\n   * The 'detectionModel' associated with the detected faceIds. Supported 'detectionModel' values include 'detection_01', 'detection_02' and 'detection_03'. The default value is 'detection_01'. 'detection_03' is recommended since its accuracy is improved on smaller faces (64x64 pixels) and rotated face orientations.\n   *\n   * Possible values: \"detection_01\", \"detection_02\", \"detection_03\"\n   */\n  detectionModel?: DetectionModel;\n  /**\n   * The 'recognitionModel' associated with the detected faceIds. Supported 'recognitionModel' values include 'recognition_01', 'recognition_02', 'recognition_03' or 'recognition_04'. The default value is 'recognition_01'. 'recognition_04' is recommended since its accuracy is improved on faces wearing masks compared with 'recognition_03', and its overall accuracy is improved compared with 'recognition_01' and 'recognition_02'.\n   *\n   * Possible values: \"recognition_01\", \"recognition_02\", \"recognition_03\", \"recognition_04\"\n   */\n  recognitionModel?: RecognitionModel;\n  /** Return faceIds of the detected faces or not. The default value is true. */\n  returnFaceId?: boolean;\n  /** Analyze and return the one or more specified face attributes in the comma-separated string like 'returnFaceAttributes=headPose,glasses'. Face attribute analysis has additional computational and time cost. */\n  returnFaceAttributes?: FaceAttributeType[];\n  /** Return face landmarks of the detected faces or not. The default value is false. */\n  returnFaceLandmarks?: boolean;\n  /** Return 'recognitionModel' or not. The default value is false. This is only applicable when returnFaceId = true. */\n  returnRecognitionModel?: boolean;\n  /** The number of seconds for the face ID being cached. Supported range from 60 seconds up to 86400 seconds. The default value is 86400 (24 hours). */\n  faceIdTimeToLive?: number;\n}\n\nexport interface DetectQueryParam {\n  queryParameters?: DetectQueryParamProperties;\n}\n\nexport interface DetectMediaTypesParam {\n  /** The format of the HTTP payload. */\n  contentType: \"application/octet-stream\";\n}\n\nexport type DetectParameters = DetectQueryParam &\n  DetectMediaTypesParam &\n  DetectBodyParam &\n  RequestParameters;\n\nexport interface DetectFromSessionImageIdBodyParam {\n  body: { sessionImageId: string };\n}\n\nexport interface DetectFromSessionImageIdQueryParamProperties {\n  /**\n   * The 'detectionModel' associated with the detected faceIds. Supported 'detectionModel' values include 'detection_01', 'detection_02' and 'detection_03'. The default value is 'detection_01'. 'detection_03' is recommended since its accuracy is improved on smaller faces (64x64 pixels) and rotated face orientations.\n   *\n   * Possible values: \"detection_01\", \"detection_02\", \"detection_03\"\n   */\n  detectionModel?: DetectionModel;\n  /**\n   * The 'recognitionModel' associated with the detected faceIds. Supported 'recognitionModel' values include 'recognition_01', 'recognition_02', 'recognition_03' or 'recognition_04'. The default value is 'recognition_01'. 'recognition_04' is recommended since its accuracy is improved on faces wearing masks compared with 'recognition_03', and its overall accuracy is improved compared with 'recognition_01' and 'recognition_02'.\n   *\n   * Possible values: \"recognition_01\", \"recognition_02\", \"recognition_03\", \"recognition_04\"\n   */\n  recognitionModel?: RecognitionModel;\n  /** Return faceIds of the detected faces or not. The default value is true. */\n  returnFaceId?: boolean;\n  /** Analyze and return the one or more specified face attributes in the comma-separated string like 'returnFaceAttributes=headPose,glasses'. Face attribute analysis has additional computational and time cost. */\n  returnFaceAttributes?: FaceAttributeType[];\n  /** Return face landmarks of the detected faces or not. The default value is false. */\n  returnFaceLandmarks?: boolean;\n  /** Return 'recognitionModel' or not. The default value is false. This is only applicable when returnFaceId = true. */\n  returnRecognitionModel?: boolean;\n  /** The number of seconds for the face ID being cached. Supported range from 60 seconds up to 86400 seconds. The default value is 86400 (24 hours). */\n  faceIdTimeToLive?: number;\n}\n\nexport interface DetectFromSessionImageIdQueryParam {\n  queryParameters?: DetectFromSessionImageIdQueryParamProperties;\n}\n\nexport interface DetectFromSessionImageIdMediaTypesParam {\n  /** The format of the HTTP payload. */\n  contentType: \"application/json\";\n}\n\nexport type DetectFromSessionImageIdParameters = DetectFromSessionImageIdQueryParam &\n  DetectFromSessionImageIdMediaTypesParam &\n  DetectFromSessionImageIdBodyParam &\n  RequestParameters;\n\nexport interface FindSimilarBodyParam {\n  body: {\n    faceId: string;\n    maxNumOfCandidatesReturned?: number;\n    mode?: FindSimilarMatchMode;\n    faceIds: string[];\n  };\n}\n\nexport type FindSimilarParameters = FindSimilarBodyParam & RequestParameters;\n\nexport interface FindSimilarFromFaceListBodyParam {\n  body: {\n    faceId: string;\n    maxNumOfCandidatesReturned?: number;\n    mode?: FindSimilarMatchMode;\n    faceListId: string;\n  };\n}\n\nexport type FindSimilarFromFaceListParameters = FindSimilarFromFaceListBodyParam &\n  RequestParameters;\n\nexport interface FindSimilarFromLargeFaceListBodyParam {\n  body: {\n    faceId: string;\n    maxNumOfCandidatesReturned?: number;\n    mode?: FindSimilarMatchMode;\n    largeFaceListId: string;\n  };\n}\n\nexport type FindSimilarFromLargeFaceListParameters = FindSimilarFromLargeFaceListBodyParam &\n  RequestParameters;\n\nexport interface IdentifyFromPersonGroupBodyParam {\n  body: {\n    faceIds: string[];\n    personGroupId: string;\n    maxNumOfCandidatesReturned?: number;\n    confidenceThreshold?: number;\n  };\n}\n\nexport type IdentifyFromPersonGroupParameters = IdentifyFromPersonGroupBodyParam &\n  RequestParameters;\n\nexport interface IdentifyFromLargePersonGroupBodyParam {\n  body: {\n    faceIds: string[];\n    largePersonGroupId: string;\n    maxNumOfCandidatesReturned?: number;\n    confidenceThreshold?: number;\n  };\n}\n\nexport type IdentifyFromLargePersonGroupParameters = IdentifyFromLargePersonGroupBodyParam &\n  RequestParameters;\n\nexport interface IdentifyFromPersonDirectoryBodyParam {\n  body: {\n    faceIds: string[];\n    personIds: string[];\n    maxNumOfCandidatesReturned?: number;\n    confidenceThreshold?: number;\n  };\n}\n\nexport type IdentifyFromPersonDirectoryParameters = IdentifyFromPersonDirectoryBodyParam &\n  RequestParameters;\n\nexport interface IdentifyFromDynamicPersonGroupBodyParam {\n  body: {\n    faceIds: string[];\n    dynamicPersonGroupId: string;\n    maxNumOfCandidatesReturned?: number;\n    confidenceThreshold?: number;\n  };\n}\n\nexport type IdentifyFromDynamicPersonGroupParameters = IdentifyFromDynamicPersonGroupBodyParam &\n  RequestParameters;\n\nexport interface VerifyFaceToFaceBodyParam {\n  body: { faceId1: string; faceId2: string };\n}\n\nexport type VerifyFaceToFaceParameters = VerifyFaceToFaceBodyParam & RequestParameters;\n\nexport interface VerifyFromPersonGroupBodyParam {\n  body: { faceId: string; personGroupId: string; personId: string };\n}\n\nexport type VerifyFromPersonGroupParameters = VerifyFromPersonGroupBodyParam & RequestParameters;\n\nexport interface VerifyFromLargePersonGroupBodyParam {\n  body: { faceId: string; largePersonGroupId: string; personId: string };\n}\n\nexport type VerifyFromLargePersonGroupParameters = VerifyFromLargePersonGroupBodyParam &\n  RequestParameters;\n\nexport interface VerifyFromPersonDirectoryBodyParam {\n  body: { faceId: string; personId: string };\n}\n\nexport type VerifyFromPersonDirectoryParameters = VerifyFromPersonDirectoryBodyParam &\n  RequestParameters;\n\nexport interface GroupBodyParam {\n  body: { faceIds: string[] };\n}\n\nexport type GroupParameters = GroupBodyParam & RequestParameters;\n\nexport interface CreateFaceListBodyParam {\n  body: CreateCollectionRequest;\n}\n\nexport type CreateFaceListParameters = CreateFaceListBodyParam & RequestParameters;\nexport type DeleteFaceListParameters = RequestParameters;\n\nexport interface GetFaceListQueryParamProperties {\n  /** Return 'recognitionModel' or not. The default value is false. */\n  returnRecognitionModel?: boolean;\n}\n\nexport interface GetFaceListQueryParam {\n  queryParameters?: GetFaceListQueryParamProperties;\n}\n\nexport type GetFaceListParameters = GetFaceListQueryParam & RequestParameters;\n\nexport interface UpdateFaceListBodyParam {\n  body: UserDefinedFieldsForUpdate;\n}\n\nexport type UpdateFaceListParameters = UpdateFaceListBodyParam & RequestParameters;\n\nexport interface GetFaceListsQueryParamProperties {\n  /** Return 'recognitionModel' or not. The default value is false. */\n  returnRecognitionModel?: boolean;\n}\n\nexport interface GetFaceListsQueryParam {\n  queryParameters?: GetFaceListsQueryParamProperties;\n}\n\nexport type GetFaceListsParameters = GetFaceListsQueryParam & RequestParameters;\n\nexport interface AddFaceListFaceFromUrlBodyParam {\n  body: AddFaceFromUrlRequest;\n}\n\nexport interface AddFaceListFaceFromUrlQueryParamProperties {\n  /** A face rectangle to specify the target face to be added to a person, in the format of 'targetFace=left,top,width,height'. */\n  targetFace?: number[];\n  /**\n   * The 'detectionModel' associated with the detected faceIds. Supported 'detectionModel' values include 'detection_01', 'detection_02' and 'detection_03'. The default value is 'detection_01'.\n   *\n   * Possible values: \"detection_01\", \"detection_02\", \"detection_03\"\n   */\n  detectionModel?: DetectionModel;\n  /** User-provided data attached to the face. The size limit is 1K. */\n  userData?: string;\n}\n\nexport interface AddFaceListFaceFromUrlQueryParam {\n  queryParameters?: AddFaceListFaceFromUrlQueryParamProperties;\n}\n\nexport type AddFaceListFaceFromUrlParameters = AddFaceListFaceFromUrlQueryParam &\n  AddFaceListFaceFromUrlBodyParam &\n  RequestParameters;\n\nexport interface AddFaceListFaceBodyParam {\n  /**\n   * The image to be analyzed\n   *\n   * Value may contain any sequence of octets\n   */\n  body: string | Uint8Array | ReadableStream<Uint8Array> | NodeJS.ReadableStream;\n}\n\nexport interface AddFaceListFaceQueryParamProperties {\n  /** A face rectangle to specify the target face to be added to a person, in the format of 'targetFace=left,top,width,height'. */\n  targetFace?: number[];\n  /**\n   * The 'detectionModel' associated with the detected faceIds. Supported 'detectionModel' values include 'detection_01', 'detection_02' and 'detection_03'. The default value is 'detection_01'.\n   *\n   * Possible values: \"detection_01\", \"detection_02\", \"detection_03\"\n   */\n  detectionModel?: DetectionModel;\n  /** User-provided data attached to the face. The size limit is 1K. */\n  userData?: string;\n}\n\nexport interface AddFaceListFaceQueryParam {\n  queryParameters?: AddFaceListFaceQueryParamProperties;\n}\n\nexport interface AddFaceListFaceMediaTypesParam {\n  /** The format of the HTTP payload. */\n  contentType: \"application/octet-stream\";\n}\n\nexport type AddFaceListFaceParameters = AddFaceListFaceQueryParam &\n  AddFaceListFaceMediaTypesParam &\n  AddFaceListFaceBodyParam &\n  RequestParameters;\nexport type DeleteFaceListFaceParameters = RequestParameters;\n\nexport interface CreateLargeFaceListBodyParam {\n  body: CreateCollectionRequest;\n}\n\nexport type CreateLargeFaceListParameters = CreateLargeFaceListBodyParam & RequestParameters;\nexport type DeleteLargeFaceListParameters = RequestParameters;\n\nexport interface GetLargeFaceListQueryParamProperties {\n  /** Return 'recognitionModel' or not. The default value is false. */\n  returnRecognitionModel?: boolean;\n}\n\nexport interface GetLargeFaceListQueryParam {\n  queryParameters?: GetLargeFaceListQueryParamProperties;\n}\n\nexport type GetLargeFaceListParameters = GetLargeFaceListQueryParam & RequestParameters;\n\nexport interface UpdateLargeFaceListBodyParam {\n  body: UserDefinedFieldsForUpdate;\n}\n\nexport type UpdateLargeFaceListParameters = UpdateLargeFaceListBodyParam & RequestParameters;\n\nexport interface GetLargeFaceListsQueryParamProperties {\n  /** List resources greater than the \"start\". It contains no more than 64 characters. Default is empty. */\n  start?: string;\n  /** The number of items to list, ranging in [1, 1000]. Default is 1000. */\n  top?: number;\n  /** Return 'recognitionModel' or not. The default value is false. */\n  returnRecognitionModel?: boolean;\n}\n\nexport interface GetLargeFaceListsQueryParam {\n  queryParameters?: GetLargeFaceListsQueryParamProperties;\n}\n\nexport type GetLargeFaceListsParameters = GetLargeFaceListsQueryParam & RequestParameters;\nexport type GetLargeFaceListTrainingStatusParameters = RequestParameters;\nexport type TrainLargeFaceListParameters = RequestParameters;\n\nexport interface AddLargeFaceListFaceFromUrlBodyParam {\n  body: AddFaceFromUrlRequest;\n}\n\nexport interface AddLargeFaceListFaceFromUrlQueryParamProperties {\n  /** A face rectangle to specify the target face to be added to a person, in the format of 'targetFace=left,top,width,height'. */\n  targetFace?: number[];\n  /**\n   * The 'detectionModel' associated with the detected faceIds. Supported 'detectionModel' values include 'detection_01', 'detection_02' and 'detection_03'. The default value is 'detection_01'.\n   *\n   * Possible values: \"detection_01\", \"detection_02\", \"detection_03\"\n   */\n  detectionModel?: DetectionModel;\n  /** User-provided data attached to the face. The size limit is 1K. */\n  userData?: string;\n}\n\nexport interface AddLargeFaceListFaceFromUrlQueryParam {\n  queryParameters?: AddLargeFaceListFaceFromUrlQueryParamProperties;\n}\n\nexport type AddLargeFaceListFaceFromUrlParameters = AddLargeFaceListFaceFromUrlQueryParam &\n  AddLargeFaceListFaceFromUrlBodyParam &\n  RequestParameters;\n\nexport interface AddLargeFaceListFaceBodyParam {\n  /**\n   * The image to be analyzed\n   *\n   * Value may contain any sequence of octets\n   */\n  body: string | Uint8Array | ReadableStream<Uint8Array> | NodeJS.ReadableStream;\n}\n\nexport interface AddLargeFaceListFaceQueryParamProperties {\n  /** A face rectangle to specify the target face to be added to a person, in the format of 'targetFace=left,top,width,height'. */\n  targetFace?: number[];\n  /**\n   * The 'detectionModel' associated with the detected faceIds. Supported 'detectionModel' values include 'detection_01', 'detection_02' and 'detection_03'. The default value is 'detection_01'.\n   *\n   * Possible values: \"detection_01\", \"detection_02\", \"detection_03\"\n   */\n  detectionModel?: DetectionModel;\n  /** User-provided data attached to the face. The size limit is 1K. */\n  userData?: string;\n}\n\nexport interface AddLargeFaceListFaceQueryParam {\n  queryParameters?: AddLargeFaceListFaceQueryParamProperties;\n}\n\nexport interface AddLargeFaceListFaceMediaTypesParam {\n  /** The format of the HTTP payload. */\n  contentType: \"application/octet-stream\";\n}\n\nexport type AddLargeFaceListFaceParameters = AddLargeFaceListFaceQueryParam &\n  AddLargeFaceListFaceMediaTypesParam &\n  AddLargeFaceListFaceBodyParam &\n  RequestParameters;\nexport type DeleteLargeFaceListFaceParameters = RequestParameters;\nexport type GetLargeFaceListFaceParameters = RequestParameters;\n\nexport interface UpdateLargeFaceListFaceBodyParam {\n  body: FaceUserData;\n}\n\nexport type UpdateLargeFaceListFaceParameters = UpdateLargeFaceListFaceBodyParam &\n  RequestParameters;\n\nexport interface GetLargeFaceListFacesQueryParamProperties {\n  /** List resources greater than the \"start\". It contains no more than 64 characters. Default is empty. */\n  start?: string;\n  /** The number of items to list, ranging in [1, 1000]. Default is 1000. */\n  top?: number;\n}\n\nexport interface GetLargeFaceListFacesQueryParam {\n  queryParameters?: GetLargeFaceListFacesQueryParamProperties;\n}\n\nexport type GetLargeFaceListFacesParameters = GetLargeFaceListFacesQueryParam & RequestParameters;\n\nexport interface CreatePersonGroupBodyParam {\n  body: CreateCollectionRequest;\n}\n\nexport type CreatePersonGroupParameters = CreatePersonGroupBodyParam & RequestParameters;\nexport type DeletePersonGroupParameters = RequestParameters;\n\nexport interface GetPersonGroupQueryParamProperties {\n  /** Return 'recognitionModel' or not. The default value is false. */\n  returnRecognitionModel?: boolean;\n}\n\nexport interface GetPersonGroupQueryParam {\n  queryParameters?: GetPersonGroupQueryParamProperties;\n}\n\nexport type GetPersonGroupParameters = GetPersonGroupQueryParam & RequestParameters;\n\nexport interface UpdatePersonGroupBodyParam {\n  body: UserDefinedFieldsForUpdate;\n}\n\nexport type UpdatePersonGroupParameters = UpdatePersonGroupBodyParam & RequestParameters;\n\nexport interface GetPersonGroupsQueryParamProperties {\n  /** List resources greater than the \"start\". It contains no more than 64 characters. Default is empty. */\n  start?: string;\n  /** The number of items to list, ranging in [1, 1000]. Default is 1000. */\n  top?: number;\n  /** Return 'recognitionModel' or not. The default value is false. */\n  returnRecognitionModel?: boolean;\n}\n\nexport interface GetPersonGroupsQueryParam {\n  queryParameters?: GetPersonGroupsQueryParamProperties;\n}\n\nexport type GetPersonGroupsParameters = GetPersonGroupsQueryParam & RequestParameters;\nexport type GetPersonGroupTrainingStatusParameters = RequestParameters;\nexport type TrainPersonGroupParameters = RequestParameters;\n\nexport interface CreatePersonGroupPersonBodyParam {\n  body: UserDefinedFields;\n}\n\nexport type CreatePersonGroupPersonParameters = CreatePersonGroupPersonBodyParam &\n  RequestParameters;\nexport type DeletePersonGroupPersonParameters = RequestParameters;\nexport type GetPersonGroupPersonParameters = RequestParameters;\n\nexport interface UpdatePersonGroupPersonBodyParam {\n  body: UserDefinedFieldsForUpdate;\n}\n\nexport type UpdatePersonGroupPersonParameters = UpdatePersonGroupPersonBodyParam &\n  RequestParameters;\n\nexport interface GetPersonGroupPersonsQueryParamProperties {\n  /** List resources greater than the \"start\". It contains no more than 64 characters. Default is empty. */\n  start?: string;\n  /** The number of items to list, ranging in [1, 1000]. Default is 1000. */\n  top?: number;\n}\n\nexport interface GetPersonGroupPersonsQueryParam {\n  queryParameters?: GetPersonGroupPersonsQueryParamProperties;\n}\n\nexport type GetPersonGroupPersonsParameters = GetPersonGroupPersonsQueryParam & RequestParameters;\n\nexport interface AddPersonGroupPersonFaceFromUrlBodyParam {\n  body: AddFaceFromUrlRequest;\n}\n\nexport interface AddPersonGroupPersonFaceFromUrlQueryParamProperties {\n  /** A face rectangle to specify the target face to be added to a person, in the format of 'targetFace=left,top,width,height'. */\n  targetFace?: number[];\n  /**\n   * The 'detectionModel' associated with the detected faceIds. Supported 'detectionModel' values include 'detection_01', 'detection_02' and 'detection_03'. The default value is 'detection_01'.\n   *\n   * Possible values: \"detection_01\", \"detection_02\", \"detection_03\"\n   */\n  detectionModel?: DetectionModel;\n  /** User-provided data attached to the face. The size limit is 1K. */\n  userData?: string;\n}\n\nexport interface AddPersonGroupPersonFaceFromUrlQueryParam {\n  queryParameters?: AddPersonGroupPersonFaceFromUrlQueryParamProperties;\n}\n\nexport type AddPersonGroupPersonFaceFromUrlParameters = AddPersonGroupPersonFaceFromUrlQueryParam &\n  AddPersonGroupPersonFaceFromUrlBodyParam &\n  RequestParameters;\n\nexport interface AddPersonGroupPersonFaceBodyParam {\n  /**\n   * The image to be analyzed\n   *\n   * Value may contain any sequence of octets\n   */\n  body: string | Uint8Array | ReadableStream<Uint8Array> | NodeJS.ReadableStream;\n}\n\nexport interface AddPersonGroupPersonFaceQueryParamProperties {\n  /** A face rectangle to specify the target face to be added to a person, in the format of 'targetFace=left,top,width,height'. */\n  targetFace?: number[];\n  /**\n   * The 'detectionModel' associated with the detected faceIds. Supported 'detectionModel' values include 'detection_01', 'detection_02' and 'detection_03'. The default value is 'detection_01'.\n   *\n   * Possible values: \"detection_01\", \"detection_02\", \"detection_03\"\n   */\n  detectionModel?: DetectionModel;\n  /** User-provided data attached to the face. The size limit is 1K. */\n  userData?: string;\n}\n\nexport interface AddPersonGroupPersonFaceQueryParam {\n  queryParameters?: AddPersonGroupPersonFaceQueryParamProperties;\n}\n\nexport interface AddPersonGroupPersonFaceMediaTypesParam {\n  /** The format of the HTTP payload. */\n  contentType: \"application/octet-stream\";\n}\n\nexport type AddPersonGroupPersonFaceParameters = AddPersonGroupPersonFaceQueryParam &\n  AddPersonGroupPersonFaceMediaTypesParam &\n  AddPersonGroupPersonFaceBodyParam &\n  RequestParameters;\nexport type DeletePersonGroupPersonFaceParameters = RequestParameters;\nexport type GetPersonGroupPersonFaceParameters = RequestParameters;\n\nexport interface UpdatePersonGroupPersonFaceBodyParam {\n  body: FaceUserData;\n}\n\nexport type UpdatePersonGroupPersonFaceParameters = UpdatePersonGroupPersonFaceBodyParam &\n  RequestParameters;\n\nexport interface CreateLargePersonGroupBodyParam {\n  body: CreateCollectionRequest;\n}\n\nexport type CreateLargePersonGroupParameters = CreateLargePersonGroupBodyParam & RequestParameters;\nexport type DeleteLargePersonGroupParameters = RequestParameters;\n\nexport interface GetLargePersonGroupQueryParamProperties {\n  /** Return 'recognitionModel' or not. The default value is false. */\n  returnRecognitionModel?: boolean;\n}\n\nexport interface GetLargePersonGroupQueryParam {\n  queryParameters?: GetLargePersonGroupQueryParamProperties;\n}\n\nexport type GetLargePersonGroupParameters = GetLargePersonGroupQueryParam & RequestParameters;\n\nexport interface UpdateLargePersonGroupBodyParam {\n  body: UserDefinedFieldsForUpdate;\n}\n\nexport type UpdateLargePersonGroupParameters = UpdateLargePersonGroupBodyParam & RequestParameters;\n\nexport interface GetLargePersonGroupsQueryParamProperties {\n  /** List resources greater than the \"start\". It contains no more than 64 characters. Default is empty. */\n  start?: string;\n  /** The number of items to list, ranging in [1, 1000]. Default is 1000. */\n  top?: number;\n  /** Return 'recognitionModel' or not. The default value is false. */\n  returnRecognitionModel?: boolean;\n}\n\nexport interface GetLargePersonGroupsQueryParam {\n  queryParameters?: GetLargePersonGroupsQueryParamProperties;\n}\n\nexport type GetLargePersonGroupsParameters = GetLargePersonGroupsQueryParam & RequestParameters;\nexport type GetLargePersonGroupTrainingStatusParameters = RequestParameters;\nexport type TrainLargePersonGroupParameters = RequestParameters;\n\nexport interface CreateLargePersonGroupPersonBodyParam {\n  body: UserDefinedFields;\n}\n\nexport type CreateLargePersonGroupPersonParameters = CreateLargePersonGroupPersonBodyParam &\n  RequestParameters;\nexport type DeleteLargePersonGroupPersonParameters = RequestParameters;\nexport type GetLargePersonGroupPersonParameters = RequestParameters;\n\nexport interface UpdateLargePersonGroupPersonBodyParam {\n  body: UserDefinedFieldsForUpdate;\n}\n\nexport type UpdateLargePersonGroupPersonParameters = UpdateLargePersonGroupPersonBodyParam &\n  RequestParameters;\n\nexport interface GetLargePersonGroupPersonsQueryParamProperties {\n  /** List resources greater than the \"start\". It contains no more than 64 characters. Default is empty. */\n  start?: string;\n  /** The number of items to list, ranging in [1, 1000]. Default is 1000. */\n  top?: number;\n}\n\nexport interface GetLargePersonGroupPersonsQueryParam {\n  queryParameters?: GetLargePersonGroupPersonsQueryParamProperties;\n}\n\nexport type GetLargePersonGroupPersonsParameters = GetLargePersonGroupPersonsQueryParam &\n  RequestParameters;\n\nexport interface AddLargePersonGroupPersonFaceFromUrlBodyParam {\n  body: AddFaceFromUrlRequest;\n}\n\nexport interface AddLargePersonGroupPersonFaceFromUrlQueryParamProperties {\n  /** A face rectangle to specify the target face to be added to a person, in the format of 'targetFace=left,top,width,height'. */\n  targetFace?: number[];\n  /**\n   * The 'detectionModel' associated with the detected faceIds. Supported 'detectionModel' values include 'detection_01', 'detection_02' and 'detection_03'. The default value is 'detection_01'.\n   *\n   * Possible values: \"detection_01\", \"detection_02\", \"detection_03\"\n   */\n  detectionModel?: DetectionModel;\n  /** User-provided data attached to the face. The size limit is 1K. */\n  userData?: string;\n}\n\nexport interface AddLargePersonGroupPersonFaceFromUrlQueryParam {\n  queryParameters?: AddLargePersonGroupPersonFaceFromUrlQueryParamProperties;\n}\n\nexport type AddLargePersonGroupPersonFaceFromUrlParameters =\n  AddLargePersonGroupPersonFaceFromUrlQueryParam &\n    AddLargePersonGroupPersonFaceFromUrlBodyParam &\n    RequestParameters;\n\nexport interface AddLargePersonGroupPersonFaceBodyParam {\n  /**\n   * The image to be analyzed\n   *\n   * Value may contain any sequence of octets\n   */\n  body: string | Uint8Array | ReadableStream<Uint8Array> | NodeJS.ReadableStream;\n}\n\nexport interface AddLargePersonGroupPersonFaceQueryParamProperties {\n  /** A face rectangle to specify the target face to be added to a person, in the format of 'targetFace=left,top,width,height'. */\n  targetFace?: number[];\n  /**\n   * The 'detectionModel' associated with the detected faceIds. Supported 'detectionModel' values include 'detection_01', 'detection_02' and 'detection_03'. The default value is 'detection_01'.\n   *\n   * Possible values: \"detection_01\", \"detection_02\", \"detection_03\"\n   */\n  detectionModel?: DetectionModel;\n  /** User-provided data attached to the face. The size limit is 1K. */\n  userData?: string;\n}\n\nexport interface AddLargePersonGroupPersonFaceQueryParam {\n  queryParameters?: AddLargePersonGroupPersonFaceQueryParamProperties;\n}\n\nexport interface AddLargePersonGroupPersonFaceMediaTypesParam {\n  /** The format of the HTTP payload. */\n  contentType: \"application/octet-stream\";\n}\n\nexport type AddLargePersonGroupPersonFaceParameters = AddLargePersonGroupPersonFaceQueryParam &\n  AddLargePersonGroupPersonFaceMediaTypesParam &\n  AddLargePersonGroupPersonFaceBodyParam &\n  RequestParameters;\nexport type DeleteLargePersonGroupPersonFaceParameters = RequestParameters;\nexport type GetLargePersonGroupPersonFaceParameters = RequestParameters;\n\nexport interface UpdateLargePersonGroupPersonFaceBodyParam {\n  body: FaceUserData;\n}\n\nexport type UpdateLargePersonGroupPersonFaceParameters = UpdateLargePersonGroupPersonFaceBodyParam &\n  RequestParameters;\n\nexport interface CreateLivenessSessionBodyParam {\n  /** Body parameter. */\n  body: CreateLivenessSessionContent;\n}\n\nexport type CreateLivenessSessionParameters = CreateLivenessSessionBodyParam & RequestParameters;\nexport type DeleteLivenessSessionParameters = RequestParameters;\nexport type GetLivenessSessionResultParameters = RequestParameters;\n\nexport interface GetLivenessSessionsQueryParamProperties {\n  /** List resources greater than the \"start\". It contains no more than 64 characters. Default is empty. */\n  start?: string;\n  /** The number of items to list, ranging in [1, 1000]. Default is 1000. */\n  top?: number;\n}\n\nexport interface GetLivenessSessionsQueryParam {\n  queryParameters?: GetLivenessSessionsQueryParamProperties;\n}\n\nexport type GetLivenessSessionsParameters = GetLivenessSessionsQueryParam & RequestParameters;\n\nexport interface GetLivenessSessionAuditEntriesQueryParamProperties {\n  /** List resources greater than the \"start\". It contains no more than 64 characters. Default is empty. */\n  start?: string;\n  /** The number of items to list, ranging in [1, 1000]. Default is 1000. */\n  top?: number;\n}\n\nexport interface GetLivenessSessionAuditEntriesQueryParam {\n  queryParameters?: GetLivenessSessionAuditEntriesQueryParamProperties;\n}\n\nexport type GetLivenessSessionAuditEntriesParameters = GetLivenessSessionAuditEntriesQueryParam &\n  RequestParameters;\n\nexport interface CreateLivenessWithVerifySessionWithVerifyImageBodyParam {\n  /** Request content of liveness with verify session creation. */\n  body: CreateLivenessWithVerifySessionMultipartContent;\n}\n\nexport interface CreateLivenessWithVerifySessionWithVerifyImageMediaTypesParam {\n  /** The content type for the operation. Always multipart/form-data for this operation. */\n  contentType: \"multipart/form-data\";\n}\n\nexport type CreateLivenessWithVerifySessionWithVerifyImageParameters =\n  CreateLivenessWithVerifySessionWithVerifyImageMediaTypesParam &\n    CreateLivenessWithVerifySessionWithVerifyImageBodyParam &\n    RequestParameters;\n\nexport interface CreateLivenessWithVerifySessionBodyParam {\n  /** Body parameter. */\n  body: CreateLivenessWithVerifySessionJsonContent;\n}\n\nexport type CreateLivenessWithVerifySessionParameters = CreateLivenessWithVerifySessionBodyParam &\n  RequestParameters;\nexport type DeleteLivenessWithVerifySessionParameters = RequestParameters;\nexport type GetLivenessWithVerifySessionResultParameters = RequestParameters;\n\nexport interface GetLivenessWithVerifySessionsQueryParamProperties {\n  /** List resources greater than the \"start\". It contains no more than 64 characters. Default is empty. */\n  start?: string;\n  /** The number of items to list, ranging in [1, 1000]. Default is 1000. */\n  top?: number;\n}\n\nexport interface GetLivenessWithVerifySessionsQueryParam {\n  queryParameters?: GetLivenessWithVerifySessionsQueryParamProperties;\n}\n\nexport type GetLivenessWithVerifySessionsParameters = GetLivenessWithVerifySessionsQueryParam &\n  RequestParameters;\n\nexport interface GetLivenessWithVerifySessionAuditEntriesQueryParamProperties {\n  /** List resources greater than the \"start\". It contains no more than 64 characters. Default is empty. */\n  start?: string;\n  /** The number of items to list, ranging in [1, 1000]. Default is 1000. */\n  top?: number;\n}\n\nexport interface GetLivenessWithVerifySessionAuditEntriesQueryParam {\n  queryParameters?: GetLivenessWithVerifySessionAuditEntriesQueryParamProperties;\n}\n\nexport type GetLivenessWithVerifySessionAuditEntriesParameters =\n  GetLivenessWithVerifySessionAuditEntriesQueryParam & RequestParameters;\nexport type GetSessionImageParameters = RequestParameters;\n\nexport interface CreatePersonBodyParam {\n  body: UserDefinedFields;\n}\n\nexport type CreatePersonParameters = CreatePersonBodyParam & RequestParameters;\nexport type DeletePersonParameters = RequestParameters;\nexport type GetPersonParameters = RequestParameters;\n\nexport interface UpdatePersonBodyParam {\n  body: UserDefinedFieldsForUpdate;\n}\n\nexport type UpdatePersonParameters = UpdatePersonBodyParam & RequestParameters;\n\nexport interface GetPersonsQueryParamProperties {\n  /** List resources greater than the \"start\". It contains no more than 64 characters. Default is empty. */\n  start?: string;\n  /** The number of items to list, ranging in [1, 1000]. Default is 1000. */\n  top?: number;\n}\n\nexport interface GetPersonsQueryParam {\n  queryParameters?: GetPersonsQueryParamProperties;\n}\n\nexport type GetPersonsParameters = GetPersonsQueryParam & RequestParameters;\n\nexport interface GetDynamicPersonGroupReferencesQueryParamProperties {\n  /** List resources greater than the \"start\". It contains no more than 64 characters. Default is empty. */\n  start?: string;\n  /** The number of items to list, ranging in [1, 1000]. Default is 1000. */\n  top?: number;\n}\n\nexport interface GetDynamicPersonGroupReferencesQueryParam {\n  queryParameters?: GetDynamicPersonGroupReferencesQueryParamProperties;\n}\n\nexport type GetDynamicPersonGroupReferencesParameters = GetDynamicPersonGroupReferencesQueryParam &\n  RequestParameters;\n\nexport interface AddPersonFaceBodyParam {\n  /**\n   * The image to be analyzed\n   *\n   * Value may contain any sequence of octets\n   */\n  body: string | Uint8Array | ReadableStream<Uint8Array> | NodeJS.ReadableStream;\n}\n\nexport interface AddPersonFaceQueryParamProperties {\n  /** A face rectangle to specify the target face to be added to a person, in the format of 'targetFace=left,top,width,height'. */\n  targetFace?: number[];\n  /**\n   * The 'detectionModel' associated with the detected faceIds. Supported 'detectionModel' values include 'detection_01', 'detection_02' and 'detection_03'. The default value is 'detection_01'.\n   *\n   * Possible values: \"detection_01\", \"detection_02\", \"detection_03\"\n   */\n  detectionModel?: DetectionModel;\n  /** User-provided data attached to the face. The size limit is 1K. */\n  userData?: string;\n}\n\nexport interface AddPersonFaceQueryParam {\n  queryParameters?: AddPersonFaceQueryParamProperties;\n}\n\nexport interface AddPersonFaceMediaTypesParam {\n  /** The format of the HTTP payload. */\n  contentType: \"application/octet-stream\";\n}\n\nexport type AddPersonFaceParameters = AddPersonFaceQueryParam &\n  AddPersonFaceMediaTypesParam &\n  AddPersonFaceBodyParam &\n  RequestParameters;\n\nexport interface AddPersonFaceFromUrlBodyParam {\n  body: { url: string };\n}\n\nexport interface AddPersonFaceFromUrlQueryParamProperties {\n  /** A face rectangle to specify the target face to be added to a person, in the format of 'targetFace=left,top,width,height'. */\n  targetFace?: number[];\n  /**\n   * The 'detectionModel' associated with the detected faceIds. Supported 'detectionModel' values include 'detection_01', 'detection_02' and 'detection_03'. The default value is 'detection_01'.\n   *\n   * Possible values: \"detection_01\", \"detection_02\", \"detection_03\"\n   */\n  detectionModel?: DetectionModel;\n  /** User-provided data attached to the face. The size limit is 1K. */\n  userData?: string;\n}\n\nexport interface AddPersonFaceFromUrlQueryParam {\n  queryParameters?: AddPersonFaceFromUrlQueryParamProperties;\n}\n\nexport type AddPersonFaceFromUrlParameters = AddPersonFaceFromUrlQueryParam &\n  AddPersonFaceFromUrlBodyParam &\n  RequestParameters;\nexport type DeletePersonFaceParameters = RequestParameters;\nexport type GetPersonFaceParameters = RequestParameters;\n\nexport interface UpdatePersonFaceBodyParam {\n  body: FaceUserData;\n}\n\nexport type UpdatePersonFaceParameters = UpdatePersonFaceBodyParam & RequestParameters;\nexport type GetPersonFacesParameters = RequestParameters;\n\nexport interface CreateDynamicPersonGroupWithPersonBodyParam {\n  body: { name: string; userData?: string; addPersonIds: string[] };\n}\n\nexport type CreateDynamicPersonGroupWithPersonParameters =\n  CreateDynamicPersonGroupWithPersonBodyParam & RequestParameters;\n\nexport interface CreateDynamicPersonGroupBodyParam {\n  body: UserDefinedFields;\n}\n\nexport type CreateDynamicPersonGroupParameters = CreateDynamicPersonGroupBodyParam &\n  RequestParameters;\nexport type DeleteDynamicPersonGroupParameters = RequestParameters;\nexport type GetDynamicPersonGroupParameters = RequestParameters;\n\nexport interface UpdateDynamicPersonGroupWithPersonChangesBodyParam {\n  body: {\n    name?: string;\n    userData?: string;\n    addPersonIds?: string[];\n    removePersonIds?: string[];\n  };\n}\n\nexport type UpdateDynamicPersonGroupWithPersonChangesParameters =\n  UpdateDynamicPersonGroupWithPersonChangesBodyParam & RequestParameters;\n\nexport interface UpdateDynamicPersonGroupBodyParam {\n  body: UserDefinedFieldsForUpdate;\n}\n\nexport type UpdateDynamicPersonGroupParameters = UpdateDynamicPersonGroupBodyParam &\n  RequestParameters;\n\nexport interface GetDynamicPersonGroupsQueryParamProperties {\n  /** List resources greater than the \"start\". It contains no more than 64 characters. Default is empty. */\n  start?: string;\n  /** The number of items to list, ranging in [1, 1000]. Default is 1000. */\n  top?: number;\n}\n\nexport interface GetDynamicPersonGroupsQueryParam {\n  queryParameters?: GetDynamicPersonGroupsQueryParamProperties;\n}\n\nexport type GetDynamicPersonGroupsParameters = GetDynamicPersonGroupsQueryParam & RequestParameters;\n\nexport interface GetDynamicPersonGroupPersonsQueryParamProperties {\n  /** List resources greater than the \"start\". It contains no more than 64 characters. Default is empty. */\n  start?: string;\n  /** The number of items to list, ranging in [1, 1000]. Default is 1000. */\n  top?: number;\n}\n\nexport interface GetDynamicPersonGroupPersonsQueryParam {\n  queryParameters?: GetDynamicPersonGroupPersonsQueryParamProperties;\n}\n\nexport type GetDynamicPersonGroupPersonsParameters = GetDynamicPersonGroupPersonsQueryParam &\n  RequestParameters;\n"]}